// SPDX-FileCopyrightText: Copyright 2024 shadPS4 Emulator Project
// SPDX-License-Identifier: GPL-2.0-or-later

// Generated By moduleGenerator
#include "libscepad.h"
#include "common/log.h"
#include "error_codes.h"

namespace Libraries::Pad{

int PS4_SYSV_ABI scePadClose()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadConnectPort()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadDeviceClassGetExtendedInformation()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadDeviceClassParseData()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadDeviceOpen()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadDisableVibration()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadDisconnectDevice()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadDisconnectPort()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadEnableAutoDetect()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadEnableExtensionPort()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadEnableSpecificDeviceClass()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadEnableUsbConnection()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadGetBluetoothAddress()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadGetCapability()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadGetControllerInformation()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadGetDataInternal()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadGetDeviceId()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadGetDeviceInfo()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadGetExtControllerInformation()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadGetExtensionUnitInfo()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadGetFeatureReport()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadGetHandle()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadGetIdleCount()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadGetInfo()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadGetInfoByPortType()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadGetLicenseControllerInformation()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadGetMotionSensorPosition()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadGetMotionTimerUnit()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadGetSphereRadius()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadGetVersionInfo()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadInit()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadIsBlasterConnected()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadIsDS4Connected()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadIsLightBarBaseBrightnessControllable()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadIsMoveConnected()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadIsMoveReproductionModel()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadIsValidHandle()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadMbusInit()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadMbusTerm()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadOpen()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadOpenExt()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadOpenExt2()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadOutputReport()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadRead()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadReadBlasterForTracker()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadReadExt()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadReadForTracker()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadReadHistory()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadReadState()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadReadStateExt()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadResetLightBar()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadResetLightBarAll()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadResetLightBarAllByPortType()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadResetOrientation()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadResetOrientationForTracker()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadSetAngularVelocityDeadbandState()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadSetAutoPowerOffCount()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadSetButtonRemappingInfo()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadSetConnection()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadSetExtensionReport()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadSetFeatureReport()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadSetForceIntercepted()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadSetLightBar()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadSetLightBarBaseBrightness()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadSetLightBarBlinking()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadSetLightBarForTracker()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadSetLoginUserNumber()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadSetMotionSensorState()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadSetProcessFocus()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadSetProcessPrivilege()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadSetProcessPrivilegeOfButtonRemapping()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadSetShareButtonMaskForRemotePlay()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadSetTiltCorrectionState()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadSetUserColor()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadSetVibration()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadSetVibrationForce()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadSetVrTrackingMode()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadShareOutputData()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadStartRecording()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadStopRecording()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadSwitchConnection()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadVertualDeviceAddDevice()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadVirtualDeviceAddDevice()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadVirtualDeviceDeleteDevice()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadVirtualDeviceDisableButtonRemapping()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadVirtualDeviceGetRemoteSetting()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI scePadVirtualDeviceInsertData()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI Func_28B998C7D8A3DA1D()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI Func_298D21481F94C9FA()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI Func_51E514BCD3A05CA5()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI Func_89C9237E393DA243()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

int PS4_SYSV_ABI Func_EF103E845B6F0420()
{
	PRINT_UNIMPLEMENTED_FUNCTION_NAME();
	return ORBIS_OK;
}

void RegisterlibScePad(Core::Loader::SymbolsResolver * sym) {
 LIB_FUNCTION("6ncge5+l5Qs", "libScePad" , 1 , "libScePad", 1, 1 , scePadClose );
 LIB_FUNCTION("kazv1NzSB8c", "libScePad" , 1 , "libScePad", 1, 1 , scePadConnectPort );
 LIB_FUNCTION("AcslpN1jHR8", "libScePad" , 1 , "libScePad", 1, 1 , scePadDeviceClassGetExtendedInformation );
 LIB_FUNCTION("IHPqcbc0zCA", "libScePad" , 1 , "libScePad", 1, 1 , scePadDeviceClassParseData );
 LIB_FUNCTION("d7bXuEBycDI", "libScePad" , 1 , "libScePad", 1, 1 , scePadDeviceOpen );
 LIB_FUNCTION("0aziJjRZxqQ", "libScePad" , 1 , "libScePad", 1, 1 , scePadDisableVibration );
 LIB_FUNCTION("pnZXireDoeI", "libScePad" , 1 , "libScePad", 1, 1 , scePadDisconnectDevice );
 LIB_FUNCTION("9ez71nWSvD0", "libScePad" , 1 , "libScePad", 1, 1 , scePadDisconnectPort );
 LIB_FUNCTION("77ooWxGOIVs", "libScePad" , 1 , "libScePad", 1, 1 , scePadEnableAutoDetect );
 LIB_FUNCTION("+cE4Jx431wc", "libScePad" , 1 , "libScePad", 1, 1 , scePadEnableExtensionPort );
 LIB_FUNCTION("E1KEw5XMGQQ", "libScePad" , 1 , "libScePad", 1, 1 , scePadEnableSpecificDeviceClass );
 LIB_FUNCTION("DD-KiRLBqkQ", "libScePad" , 1 , "libScePad", 1, 1 , scePadEnableUsbConnection );
 LIB_FUNCTION("Q66U8FdrMaw", "libScePad" , 1 , "libScePad", 1, 1 , scePadGetBluetoothAddress );
 LIB_FUNCTION("qtasqbvwgV4", "libScePad" , 1 , "libScePad", 1, 1 , scePadGetCapability );
 LIB_FUNCTION("gjP9-KQzoUk", "libScePad" , 1 , "libScePad", 1, 1 , scePadGetControllerInformation );
 LIB_FUNCTION("Uq6LgTJEmQs", "libScePad" , 1 , "libScePad", 1, 1 , scePadGetDataInternal );
 LIB_FUNCTION("hDgisSGkOgw", "libScePad" , 1 , "libScePad", 1, 1 , scePadGetDeviceId );
 LIB_FUNCTION("4rS5zG7RFaM", "libScePad" , 1 , "libScePad", 1, 1 , scePadGetDeviceInfo );
 LIB_FUNCTION("hGbf2QTBmqc", "libScePad" , 1 , "libScePad", 1, 1 , scePadGetExtControllerInformation );
 LIB_FUNCTION("1DmZjZAuzEM", "libScePad" , 1 , "libScePad", 1, 1 , scePadGetExtensionUnitInfo );
 LIB_FUNCTION("PZSoY8j0Pko", "libScePad" , 1 , "libScePad", 1, 1 , scePadGetFeatureReport );
 LIB_FUNCTION("u1GRHp+oWoY", "libScePad" , 1 , "libScePad", 1, 1 , scePadGetHandle );
 LIB_FUNCTION("kiA9bZhbnAg", "libScePad" , 1 , "libScePad", 1, 1 , scePadGetIdleCount );
 LIB_FUNCTION("1Odcw19nADw", "libScePad" , 1 , "libScePad", 1, 1 , scePadGetInfo );
 LIB_FUNCTION("4x5Im8pr0-4", "libScePad" , 1 , "libScePad", 1, 1 , scePadGetInfoByPortType );
 LIB_FUNCTION("vegw8qax5MI", "libScePad" , 1 , "libScePad", 1, 1 , scePadGetLicenseControllerInformation );
 LIB_FUNCTION("WPIB7zBWxVE", "libScePad" , 1 , "libScePad", 1, 1 , scePadGetMotionSensorPosition );
 LIB_FUNCTION("k4+nDV9vbT0", "libScePad" , 1 , "libScePad", 1, 1 , scePadGetMotionTimerUnit );
 LIB_FUNCTION("do-JDWX+zRs", "libScePad" , 1 , "libScePad", 1, 1 , scePadGetSphereRadius );
 LIB_FUNCTION("QuOaoOcSOw0", "libScePad" , 1 , "libScePad", 1, 1 , scePadGetVersionInfo );
 LIB_FUNCTION("hv1luiJrqQM", "libScePad" , 1 , "libScePad", 1, 1 , scePadInit );
 LIB_FUNCTION("bi0WNvZ1nug", "libScePad" , 1 , "libScePad", 1, 1 , scePadIsBlasterConnected );
 LIB_FUNCTION("mEC+xJKyIjQ", "libScePad" , 1 , "libScePad", 1, 1 , scePadIsDS4Connected );
 LIB_FUNCTION("d2Qk-i8wGak", "libScePad" , 1 , "libScePad", 1, 1 , scePadIsLightBarBaseBrightnessControllable );
 LIB_FUNCTION("4y9RNPSBsqg", "libScePad" , 1 , "libScePad", 1, 1 , scePadIsMoveConnected );
 LIB_FUNCTION("9e56uLgk5y0", "libScePad" , 1 , "libScePad", 1, 1 , scePadIsMoveReproductionModel );
 LIB_FUNCTION("pFTi-yOrVeQ", "libScePad" , 1 , "libScePad", 1, 1 , scePadIsValidHandle );
 LIB_FUNCTION("CfwUlQtCFi4", "libScePad" , 1 , "libScePad", 1, 1 , scePadMbusInit );
 LIB_FUNCTION("s7CvzS+9ZIs", "libScePad" , 1 , "libScePad", 1, 1 , scePadMbusTerm );
 LIB_FUNCTION("xk0AcarP3V4", "libScePad" , 1 , "libScePad", 1, 1 , scePadOpen );
 LIB_FUNCTION("WFIiSfXGUq8", "libScePad" , 1 , "libScePad", 1, 1 , scePadOpenExt );
 LIB_FUNCTION("71E9e6n+2R8", "libScePad" , 1 , "libScePad", 1, 1 , scePadOpenExt2 );
 LIB_FUNCTION("DrUu8cPrje8", "libScePad" , 1 , "libScePad", 1, 1 , scePadOutputReport );
 LIB_FUNCTION("q1cHNfGycLI", "libScePad" , 1 , "libScePad", 1, 1 , scePadRead );
 LIB_FUNCTION("fm1r2vv5+OU", "libScePad" , 1 , "libScePad", 1, 1 , scePadReadBlasterForTracker );
 LIB_FUNCTION("QjwkT2Ycmew", "libScePad" , 1 , "libScePad", 1, 1 , scePadReadExt );
 LIB_FUNCTION("2NhkFTRnXHk", "libScePad" , 1 , "libScePad", 1, 1 , scePadReadForTracker );
 LIB_FUNCTION("3u4M8ck9vJM", "libScePad" , 1 , "libScePad", 1, 1 , scePadReadHistory );
 LIB_FUNCTION("YndgXqQVV7c", "libScePad" , 1 , "libScePad", 1, 1 , scePadReadState );
 LIB_FUNCTION("5Wf4q349s+Q", "libScePad" , 1 , "libScePad", 1, 1 , scePadReadStateExt );
 LIB_FUNCTION("DscD1i9HX1w", "libScePad" , 1 , "libScePad", 1, 1 , scePadResetLightBar );
 LIB_FUNCTION("+4c9xRLmiXQ", "libScePad" , 1 , "libScePad", 1, 1 , scePadResetLightBarAll );
 LIB_FUNCTION("+Yp6+orqf1M", "libScePad" , 1 , "libScePad", 1, 1 , scePadResetLightBarAllByPortType );
 LIB_FUNCTION("rIZnR6eSpvk", "libScePad" , 1 , "libScePad", 1, 1 , scePadResetOrientation );
 LIB_FUNCTION("jbAqAvLEP4A", "libScePad" , 1 , "libScePad", 1, 1 , scePadResetOrientationForTracker );
 LIB_FUNCTION("r44mAxdSG+U", "libScePad" , 1 , "libScePad", 1, 1 , scePadSetAngularVelocityDeadbandState );
 LIB_FUNCTION("ew647HuKi2Y", "libScePad" , 1 , "libScePad", 1, 1 , scePadSetAutoPowerOffCount );
 LIB_FUNCTION("MbTt1EHYCTg", "libScePad" , 1 , "libScePad", 1, 1 , scePadSetButtonRemappingInfo );
 LIB_FUNCTION("MLA06oNfF+4", "libScePad" , 1 , "libScePad", 1, 1 , scePadSetConnection );
 LIB_FUNCTION("bsbHFI0bl5s", "libScePad" , 1 , "libScePad", 1, 1 , scePadSetExtensionReport );
 LIB_FUNCTION("xqgVCEflEDY", "libScePad" , 1 , "libScePad", 1, 1 , scePadSetFeatureReport );
 LIB_FUNCTION("lrjFx4xWnY8", "libScePad" , 1 , "libScePad", 1, 1 , scePadSetForceIntercepted );
 LIB_FUNCTION("RR4novUEENY", "libScePad" , 1 , "libScePad", 1, 1 , scePadSetLightBar );
 LIB_FUNCTION("dhQXEvmrVNQ", "libScePad" , 1 , "libScePad", 1, 1 , scePadSetLightBarBaseBrightness );
 LIB_FUNCTION("etaQhgPHDRY", "libScePad" , 1 , "libScePad", 1, 1 , scePadSetLightBarBlinking );
 LIB_FUNCTION("iHuOWdvQVpg", "libScePad" , 1 , "libScePad", 1, 1 , scePadSetLightBarForTracker );
 LIB_FUNCTION("o-6Y99a8dKU", "libScePad" , 1 , "libScePad", 1, 1 , scePadSetLoginUserNumber );
 LIB_FUNCTION("clVvL4ZDntw", "libScePad" , 1 , "libScePad", 1, 1 , scePadSetMotionSensorState );
 LIB_FUNCTION("flYYxek1wy8", "libScePad" , 1 , "libScePad", 1, 1 , scePadSetProcessFocus );
 LIB_FUNCTION("DmBx8K+jDWw", "libScePad" , 1 , "libScePad", 1, 1 , scePadSetProcessPrivilege );
 LIB_FUNCTION("FbxEpTRDou8", "libScePad" , 1 , "libScePad", 1, 1 , scePadSetProcessPrivilegeOfButtonRemapping );
 LIB_FUNCTION("yah8Bk4TcYY", "libScePad" , 1 , "libScePad", 1, 1 , scePadSetShareButtonMaskForRemotePlay );
 LIB_FUNCTION("vDLMoJLde8I", "libScePad" , 1 , "libScePad", 1, 1 , scePadSetTiltCorrectionState );
 LIB_FUNCTION("z+GEemoTxOo", "libScePad" , 1 , "libScePad", 1, 1 , scePadSetUserColor );
 LIB_FUNCTION("yFVnOdGxvZY", "libScePad" , 1 , "libScePad", 1, 1 , scePadSetVibration );
 LIB_FUNCTION("8BOObG94-tc", "libScePad" , 1 , "libScePad", 1, 1 , scePadSetVibrationForce );
 LIB_FUNCTION("--jrY4SHfm8", "libScePad" , 1 , "libScePad", 1, 1 , scePadSetVrTrackingMode );
 LIB_FUNCTION("zFJ35q3RVnY", "libScePad" , 1 , "libScePad", 1, 1 , scePadShareOutputData );
 LIB_FUNCTION("80XdmVYsNPA", "libScePad" , 1 , "libScePad", 1, 1 , scePadStartRecording );
 LIB_FUNCTION("gAHvg6JPIic", "libScePad" , 1 , "libScePad", 1, 1 , scePadStopRecording );
 LIB_FUNCTION("Oi7FzRWFr0Y", "libScePad" , 1 , "libScePad", 1, 1 , scePadSwitchConnection );
 LIB_FUNCTION("0MB5x-ieRGI", "libScePad" , 1 , "libScePad", 1, 1 , scePadVertualDeviceAddDevice );
 LIB_FUNCTION("N7tpsjWQ87s", "libScePad" , 1 , "libScePad", 1, 1 , scePadVirtualDeviceAddDevice );
 LIB_FUNCTION("PFec14-UhEQ", "libScePad" , 1 , "libScePad", 1, 1 , scePadVirtualDeviceDeleteDevice );
 LIB_FUNCTION("pjPCronWdxI", "libScePad" , 1 , "libScePad", 1, 1 , scePadVirtualDeviceDisableButtonRemapping );
 LIB_FUNCTION("LKXfw7VJYqg", "libScePad" , 1 , "libScePad", 1, 1 , scePadVirtualDeviceGetRemoteSetting );
 LIB_FUNCTION("IWOyO5jKuZg", "libScePad" , 1 , "libScePad", 1, 1 , scePadVirtualDeviceInsertData );
 LIB_FUNCTION("KLmYx9ij2h0", "libScePad" , 1 , "libScePad", 1, 1 , Func_28B998C7D8A3DA1D );
 LIB_FUNCTION("KY0hSB+Uyfo", "libScePad" , 1 , "libScePad", 1, 1 , Func_298D21481F94C9FA );
 LIB_FUNCTION("UeUUvNOgXKU", "libScePad" , 1 , "libScePad", 1, 1 , Func_51E514BCD3A05CA5 );
 LIB_FUNCTION("ickjfjk9okM", "libScePad" , 1 , "libScePad", 1, 1 , Func_89C9237E393DA243 );
 LIB_FUNCTION("7xA+hFtvBCA", "libScePad" , 1 , "libScePad", 1, 1 , Func_EF103E845B6F0420 );
};

}